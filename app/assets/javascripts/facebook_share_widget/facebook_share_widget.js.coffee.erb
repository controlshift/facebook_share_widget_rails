root = exports ? this

class @FacebookShareWidget
  throttleRate: 250
  friends: []
  base_path: ""
  template: {}
  
  constructor: (@container, @options) ->
    @base_path = @options.base_path
    @template = @options.template if @options.template?
    @callbacks = {
      success: @options.callbacks && options.callbacks.success ? facebookShareWidget.callbacks.success
      fail:    @options.callbacks && options.callbacks.fail  ? facebookShareWidget.callbacks.fail
    }

    $.ajax
      url: @base_path + "/facebook/friends"
      type: "get"
      dataType: "json"
      data:  $.extend({}, @template)

      success: (resp) =>
        @friends = resp
        $("ul", @container).html(this.friendsToListItems())
      error: (jqXHR, textStatus, errorThrown) ->
        json = $.parseJSON(jqXHR.responseText)
        console.debug(json.message)

    $('input.search-text', @container).keydown (event) =>
      this.filter_list()
      #throttle(self, this.filter_list, this.throttleRate)
    
    $("ul", @container).on "click", "a", ->
      id = $(this).data("facebook-id").toString()
      friend = this.friendWithId(id)
      message = $('textarea.message', @container).val()

      errorMessage = $(this).siblings(".error-message")
      indicator = $("<img class='indicator' src=\"<%= asset_path('facebook_share_widget/loader.gif') %>\" />").insertBefore($(this))
      $(this).remove()
      friend.status = "loading"

      data = $.extend({}, @template)
      data.facebook_id = id
      data.message = message

      $.ajax
        url: @base_path + "/facebook/share"
        type: "post"
        data: { post: data }
        success: (resp) ->
          indicator.attr src: '<%= asset_path("facebook_share_widget/tick.png") %>'
          friend.status = "loaded"
          @callbacks.success(friend)
        error: (jqXHR, textStatus, errorThrown) ->
          json = $.parseJSON(jqXHR.responseText)
          indicator.attr src: '<%= asset_path("facebook_share_widget/cross.png") %>'
          errorMessage.text(json.message)
          friend.status = null
          @callbacks.fail(friend)

  friendWithId: (id) ->
    for friend in @friends
      return friend if friend.id == id

  friendsToListItems: ->
    html = ""
    for friend in @friends
      html += this.friendToListItem(friend)
    html

  friendToListItem: (item) ->
    html = "<li>"
    html += "<img class='profile' src='http://graph.facebook.com/#{item.id}/picture' />"
    html += "<span class='name'>#{item.name}</span>"
    html += "<span class='error-message'></span>"
    if item.status == "loading"
      html += "<img class='indicator' src=\"<%= asset_path('facebook_share_widget/loader.gif') %>\" />"
    else if item.status == "loaded"
      html += "<div class='indicator'><img src=\"<%= asset_path('facebook_share_widget/tick.png') %>\" /> Shared</div>"
    else
      html += "<a class='share-button' data-facebook-id='#{item.id}'>Share</a>"
    html += '</li>'
    
  filter_list: =>
    text = $('input.search-text', @container).val()
    if !!text
      regex = new RegExp(text, "i")
      html = ""
      for friend in @friends
        if regex.test(friend.name)
          html += this.friendToListItem(friend)
      $("ul", @container).html(html)
    else
      $("ul", @container).html(this.friendsToListItems())
      
#  throttle: (context, fn, delay) ->
#    alert('foo')
#    timer = null
#    ->
#      args = arguments
#      clearTimeout(timer)
#      callback = -> fn.apply(context, args)
#      timer = setTimeout(callback, delay)

root.facebookShareWidget =
  callbacks:
    success: (friend) ->
    fail: (friend) ->
